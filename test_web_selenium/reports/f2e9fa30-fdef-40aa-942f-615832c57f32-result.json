{"name": "test_002", "status": "failed", "statusDetails": {"message": "AssertionError: assert '请输入该必填项1' == '请输入该必填项'\n  - 请输入该必填项\n  + 请输入该必填项1\n  ?        +", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9663f99a47d30e1dc5b5a4e5e5ff7fa\")>\n\n    def test_002(browser):\n        \"\"\"新增必填\"\"\"\n        category=BasePage(browser)\n        category.category_login()\n    \n        category.get_element(('xpath','//span[@aria-label=\"新增下属类别\"]//*[name()=\"svg\"]')).click()\n        category.get_element(('xpath', '//input[@name=\"name\"]')).send_keys('')\n        category.get_element(('xpath', '//input[@name=\"code\"]')).send_keys(category.fk_word())\n        category.get_element(('xpath', '//button[text()=\"确定\"]')).click()\n    \n        actual=category.get_element(('xpath', '//p[text()=\"请输入该必填项\"]')).text\n        expected='请输入该必填项1'\n    \n        #这个是把图片存到文件里\n        # browser.save_screenshot('jie_shot.png')\n        # assert expected == actual\n    \n        #断言前进行截图,把传进来的browser当driver，使用这个方法，传进文件名称，失败截图，断言后\n        #try ，失败进行截图，最后抛出异常\n        try:\n            assert expected == actual\n        except Exception as e:\n            # browser.save_screenshot('jie_shot.png')\n            img=browser.get_screenshot_as_png()   #获取到二进制信息，到变量img里\n            allure.attach(img,name='失败用例截图',attachment_type=allure.attachment_type.PNG)  #失败用例就会放到这里\n>           raise e     #通过allure。attch方法，传入变量img，并取名，以及图片的格式\n\nclass_student\\test_截图.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9663f99a47d30e1dc5b5a4e5e5ff7fa\")>\n\n    def test_002(browser):\n        \"\"\"新增必填\"\"\"\n        category=BasePage(browser)\n        category.category_login()\n    \n        category.get_element(('xpath','//span[@aria-label=\"新增下属类别\"]//*[name()=\"svg\"]')).click()\n        category.get_element(('xpath', '//input[@name=\"name\"]')).send_keys('')\n        category.get_element(('xpath', '//input[@name=\"code\"]')).send_keys(category.fk_word())\n        category.get_element(('xpath', '//button[text()=\"确定\"]')).click()\n    \n        actual=category.get_element(('xpath', '//p[text()=\"请输入该必填项\"]')).text\n        expected='请输入该必填项1'\n    \n        #这个是把图片存到文件里\n        # browser.save_screenshot('jie_shot.png')\n        # assert expected == actual\n    \n        #断言前进行截图,把传进来的browser当driver，使用这个方法，传进文件名称，失败截图，断言后\n        #try ，失败进行截图，最后抛出异常\n        try:\n>           assert expected == actual\nE           AssertionError: assert '请输入该必填项1' == '请输入该必填项'\nE             - 请输入该必填项\nE             + 请输入该必填项1\nE             ?        +\n\nclass_student\\test_截图.py:28: AssertionError"}, "description": "新增必填", "attachments": [{"name": "失败用例截图", "source": "c3ff1dbd-12df-48a9-b304-b59a6dc5b5b2-attachment.png", "type": "image/png"}], "start": 1668948286235, "stop": 1668948295214, "uuid": "f0d3d5c2-1b66-4dd9-ba41-d0e316e8ec72", "historyId": "cfe9d27c1aafc41e0de22dad50344804", "testCaseId": "cce6d258827e4ff95c02b8bf7e9a459c", "fullName": "class_student.test_截图#test_002", "labels": [{"name": "parentSuite", "value": "class_student"}, {"name": "suite", "value": "test_截图"}, {"name": "host", "value": "LAPTOP-GID304T1"}, {"name": "thread", "value": "4108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "class_student.test_截图"}]}